@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<Application.Database.Readers.ReaderModel>

<h2>Readers List</h2>

@if (TempData["AlertMessage"] != null)
{
    <div class="alert alert-@TempData["AlertType"]">
        @TempData["AlertMessage"]
    </div>
}

<form method="get" asp-action="@ViewData["Action"]" class="mb-3 d-flex justify-content-center">
    <input type="text" name="search" value="@ViewData["Search"]" class="form-control w-25 me-2" placeholder="Search by name..." />
    <button type="submit" class="btn btn-primary">Search</button>
</form>

<table class="table table-hover table-striped align-middle text-center shadow">
    <thead class="table-dark">
        <tr>
            <th style="text-align:center;">Name</th>
            <th style="text-align:center;">Email</th>
            <th style="text-align:center;">Borrowed books</th>
            <th> </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var reader in Model)
        {
            <tr>
                <td>
                    <a asp-action="History" asp-route-id="@reader.Id">@reader.Name</a>
                    @if (reader.HasLateBooks)
                    {
                        <span class="badge bg-danger ms-2">Late</span>
                    }
                </td>
                <td>@reader.Email</td>
                <td>
                    @reader.BooksBorrowed
                    @if (reader.BooksBorrowed > 0)
                    {
                        <a asp-action="Details" asp-route-id="@reader.Id" class="btn btn-link btn-sm">(vezi)</a>
                    }
                </td>
                <td class="text-center">
                    <a asp-action="Edit" asp-route-id="@reader.Id" class="btn btn-sm btn-warning">✏️</a>
                    <form asp-action="Delete" asp-route-id="@reader.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this reader?');" class="d-inline">
                        <button type="submit" class="btn btn-sm btn-danger">🗑️</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-center mt-4">
    @Html.PagedListPager(Model, page => Url.Action("GetReadersFromDb", new { page, search = ViewData["Search"] }), new PagedListRenderOptions
    {
        PageClasses = new[] { "page-link" },
        ActiveLiElementClass = "active"
        })
</div>
